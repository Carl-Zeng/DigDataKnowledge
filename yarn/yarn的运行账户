
yarn启动Nodemanager时有yarn这个超级账户完成的，所以nodemanager的运行账户默认为Yarn；

yarn运行container是有两种运行账户选择策略。默认情况下，NodeManager 使用 DefaultContainerExecutor 以 NodeManager 启动者的身份来执行启动Container等操作，安全性低且没有任何CPU资源隔离机制。
而当启用了CGroup之后，必须要使用 LinuxContainerExecutor达到资源隔离的目的；

CM启用静态资源池时
会设置参数
将 CGroups 用于资源管理yarn.nodemanager.linux-container-executor.resources-handler.class 为true，启用CG。
同时指定Container的运行账户为LinuxContainerExecutor，也即设置参数
始终使用 Linux Container Executor yarn.nodemanager.container-executor.class 未true。

此时，container运行账户为任务的提交用户，而非nodemanager的运行账户yarn，安全模式下是如此，但是，在飞安全模式下，通过设置参数，可以统一指定container的运行账户为nobody。
设置参数Limit Nonsecure Container Executor Users 为true，可以统一指定非安全模式下container的运行账户为Limit Nonsecure Container Executor Users
指定的账户；
默认情况下，参数Limit Nonsecure Container Executor Users 指定的用户为nobody；







